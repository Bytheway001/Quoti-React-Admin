{"version":3,"sources":["utils.jsx","ducks/user.js","ducks/regions.js","ducks/countries.js","Views/crud/Table.jsx","Views/crud/Index.jsx","Views/Users/NewUser.jsx","Views/Users/Form.jsx","Views/Users/Show.jsx","Views/Users/Users.jsx","Views/Plans/PlanShow.jsx","Views/Plans/PlansLogic.jsx","Views/Plans/components/PlanTab.jsx","Views/Plans/components/RatesTab.jsx","Views/Plans/components/RidersTab.jsx","Views/Plans/components/KidRatesTab.jsx","Views/Plans/PlansEdit.jsx","Views/Plans/PlansNew.jsx","Views/Plans/Plans.jsx","Views/Regions/RegionShow.jsx","Views/Regions/RegionsEdit.jsx","Views/Regions/Regions.jsx","Views/Files/Edit.jsx","Views/Files/New.jsx","Views/Files/Files.jsx","App.js","serviceWorker.js","index.js"],"names":["API","APIHEADERS","parseCSV","csvstring","separator","linebreak","validator","result","headers","lines","split","index","length","ValidateCSVFile","trim","alert","cells","obj","entries","cell","parseInt","push","expected","format","formats","plan_rates","kid_rates","difference","filter","x","includes","console","log","arr1","arr2","i","arraysEqual","USER_LIST_REQUESTED","USER_LIST_SUCCEEDED","USER_LIST_FAILED","USER_INFO_REQUESTED","USER_INFO_SUCCEEDED","USER_INFO_FAILED","USER_UPDATE_REQUESTED","USER_UPDATE_SUCCEEDED","USER_UPDATE_FAILED","USER_CREATE_REQUESTED","USER_CREATE_SUCCEEDED","USER_CREATE_FAILED","USER_DELETE_REQUESTED","USER_DELETE_SUCCEEDED","USER_DELETE_FAILED","CLEAR_USER_INFO","SET_USER_INFO","onUserCreateRequested","type","onUserCreateSucceeded","setUserInfo","user","payload","getUserList","dispatch","Axios","get","then","res","data","userlist","list","getUserInfo","id","updateUser","getState","users","editing","put","catch","err","deleteUser","window","confirm","delete","onUserDeleteSucceeded","clearUserInfo","initialState","regions","countries","fetchingList","userReducer","state","action","REGION_LIST_REQUESTED","REGION_LIST_SUCCEEDED","REGION_LIST_FAILED","getRegionList","regionList","current","RegionReducer","COUNTRY_LIST_REQUESTED","COUNTRY_LIST_SUCCEEDED","COUNTRY_LIST_FAILED","getCountryList","countryList","CountryReducer","CrudTable","props","useState","direction","setDirection","order","setOrder","setData","filters","setFilters","useEffect","newArray","sort","a","b","resource","addFilter","filtername","filtervalue","f","newData","row","shown","Object","keys","map","toString","filterTable","Table","size","variant","header","onClick","sortTable","name","key","icon","faCaretUp","faCaretDown","colSpan","FormControl","as","onChange","target","value","Set","r","style","verticalAlign","textAlign","element","width","Button","block","Link","to","for","faEye","faEdit","e","message","faTimes","CrudIndex","this","setState","headerkeys","Row","Col","sm","Card","Header","className","Body","React","Component","NewUser","connect","newUser","handleChange","oldUser","Form","onSubmit","preventDefault","noGutters","height","borderRadius","Group","first_name","last_name","role","component","email","countrycode","whatsapp","region","FormCheck","checked","find","label","regionId","toggleRegion","country","countryId","toggleCountry","UserShow","createUser","enabled","license","post","Container","fluid","marginTop","exact","path","render","matchProps","match","params","PlanShow","plan","Fragment","Tabs","defaultActiveKey","Tab","border","borderTop","padding","eventKey","title","company","plan_type","rates","item","deductible","ded","rate","min_age","max_age","yearly_price","biyearly_price","endosos","endoso","endoso_configs","ec","avaliable","selected","included","num_kids","PlansLogic","companies","new_record_id","generateNewId","getRegions","handleMainChange","handleRateChange","getAttribute","destroyRate","destroy","handleRateCSVUpload","files","evt","reader","FileReader","csvFile","readAsText","onload","event","parsedCSV","first_id","handleKidRateCSVUpload","handleSubmit","errors","createNewDeductible","prompt","newRecord","createNewEndoso","price","newEndoso","addNewRate","newId","handleEndosoConfigChange","PlanTab","company_id","disabled","region_id","k","benefits","benefit","benefit_id","rows","description","replace","RatesTab","InputFiles","accept","marginBottom","onSelect","data-rate-id","data-id","RidersTab","data-endoso","KidRatesTab","PlanEdit","PlansNew","location","setRegionId","setCompanyId","setName","setPlanType","setEnabled","deductibles","setDeductibles","ages","setAges","setRates","formIn","setFormIn","formOut","setFormOut","ageMin","setAgeMin","ageMax","setAgeMax","in","deductible_out","out","values","j","min","max","table","handlePriceChange","newRates","arr","getInputValue","age","field","z","FormGroup","FormLabel","inside","outside","addDedOption","removeDedOption","addAgeOption","removeAgeOption","backgroundColor","color","agekey","dedkey","PlansEdit","RegionShow","ListGroup","ListGroupItem","codename","RegionsEdit","getCountries","JSON","stringify","isCountry","undefined","Regions","InitialState","file","lang","category","file_desc","year","FileEdit","formData","FormData","set","handleInput","xs","htmlFor","FileNew","history","setFile","setLang","setCategory","setFileDesc","setYear","append","Files","styles","sidebar","flex","page","display","flexDirection","alignItems","maxHeight","minHeight","content","overflowY","App","Sidebar","BasicLayout","children","Boolean","hostname","middleware","thunk","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccf0c1f3.chunk.js","sourcesContent":["export const API = 'https://api.quotiapp.com/api/admin/';\r\nexport const APIHEADERS = { 'CALL-TYPE': 'API' }\r\nexport function parseCSV(csvstring, separator, linebreak, validator) {\r\n    var result = [];\r\n    let headers = [];\r\n    var lines = csvstring.split(linebreak);\r\n    for (let index = 0; index < lines.length; index++) {\r\n        if (index === 0) {\r\n            headers = lines[index].trim().split(separator);\r\n            if (!ValidateCSVFile(validator, headers)) {\r\n                alert('Formato Incorrecto')\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            var cells = lines[index].split(separator)\r\n            let obj = {}\r\n            for (const [index, cell] of cells.entries()) {\r\n                obj[headers[index]] = parseInt(cell)\r\n            }\r\n            result.push(obj)\r\n        }\r\n    }\r\n    return result\r\n}\r\nexport function ValidateCSVFile(expected, format) {\r\n    let formats = {\r\n        plan_rates: ['plan_id', 'min_age', 'max_age', 'deductible', 'yearly_price', 'biyearly_price'],\r\n        kid_rates: ['plan_id', 'deductible', 'num_kids', 'yearly_price', 'biyearly_price']\r\n    }\r\n    let difference = format.filter(x => !formats[expected].includes(x));\r\n    console.log(difference)\r\n    console.log(format[4])\r\n    console.log(formats[expected][4])\r\n    return arraysEqual(format, formats[expected])\r\n\r\n}\r\nexport function arraysEqual(arr1, arr2) {\r\n    if (arr1.length !== arr2.length)\r\n        return false;\r\n    for (var i = arr1.length; i--;) {\r\n        if (arr1[i] !== arr2[i])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const responsiveText = (large, small) => {\r\n    if (window.innerWidth > 768) {\r\n        return large\r\n    }\r\n    return small\r\n}\r\n\r\nexport function groupBy(xs, f) {\r\n    return xs.reduce((r, v, i, a, k = f(v)) => ((r[k] || (r[k] = [])).push(v), r), []);\r\n}\r\n/*\r\nconst cars = [\r\n    { make: 'audi', model: 'r8', year: '2012' },\r\n    { make: 'audi', model: 'rs5', year: '2013' },\r\n    { make: 'ford', model: 'mustang', year: '2012' },\r\n    { make: 'ford', model: 'fusion', year: '2015' },\r\n    { make: 'kia', model: 'optima', year: '2012' }\r\n];\r\n\r\nconst result = groupBy(cars, (c) => c.make);\r\nconsole.log(result);\r\n*/","import { API } from \"../utils\";\r\nimport Axios from \"axios\";\r\n\r\n/** Action Types */\r\nexport const USER_LIST_REQUESTED = 'USER_LIST_REQUESTED';\r\nexport const USER_LIST_SUCCEEDED = 'USER_LIST_SUCCEEDED';\r\nexport const USER_LIST_FAILED = 'USER_LIST_FAILED';\r\n\r\nexport const USER_INFO_REQUESTED = 'USER_REQUESTED';\r\nexport const USER_INFO_SUCCEEDED = 'USER_INFO_SUCCEEDED';\r\nexport const USER_INFO_FAILED = \"USER_INFO_FAILED\";\r\n\r\nexport const USER_UPDATE_REQUESTED = 'USER_UPDATE_REQUESTED';\r\nexport const USER_UPDATE_SUCCEEDED = \"USER_UPDATE_SUCCEEDED\";\r\nexport const USER_UPDATE_FAILED = \"USER_UPDATE_FAILED\";\r\n\r\nexport const USER_CREATE_REQUESTED = \"USER_CREATE_REQUESTED\";\r\nexport const USER_CREATE_SUCCEEDED = \"USER_CREATE_SUCCEEDED\";\r\nexport const USER_CREATE_FAILED = \"USER_CREATE_FAILED\";\r\n\r\nexport const USER_DELETE_REQUESTED = \"USER_DELETE_REQUESTED\";\r\nexport const USER_DELETE_SUCCEEDED = \"USER_DELETE_SUCCEEDED\";\r\nexport const USER_DELETE_FAILED = 'USER_DELETE_FAILED';\r\n\r\nexport const CLEAR_USER_INFO = \"CLEAR_USER_INFO\";\r\nexport const SET_USER_INFO = \"SET_USER_INFO\";\r\n\r\n/** Action Creators */\r\n\r\nexport const onUserListRequested = () => ({ type: USER_LIST_REQUESTED });\r\nexport const onUserListSucceeded = (userlist) => ({ type: USER_LIST_SUCCEEDED, list: userlist })\r\nexport const onUserListFailed = () => ({ type: USER_LIST_FAILED });\r\n\r\nexport const onUserInfoRequested = (id) => ({ type: USER_INFO_REQUESTED })\r\nexport const onUserInfoSucceeded = (user) => ({ type: USER_INFO_SUCCEEDED, user })\r\nexport const onUserInfoFailed = () => ({ type: USER_INFO_FAILED })\r\n\r\nexport const onUserCreateRequested = () => ({ type: USER_CREATE_REQUESTED });\r\nexport const onUserCreateSucceeded = () => ({ type: USER_CREATE_SUCCEEDED });\r\nexport const onUserCreateFailed = () => ({ type: USER_CREATE_FAILED });\r\n\r\nexport const onUserUpdateRequested = () => ({ type: USER_UPDATE_REQUESTED });\r\nexport const onUserUpdateSucceeded = () => ({ type: USER_UPDATE_SUCCEEDED });\r\nexport const onUserUpdateFailed = () => ({ type: USER_UPDATE_FAILED })\r\n\r\nexport const onUserDeleteRequested = () => ({ type: USER_DELETE_REQUESTED });\r\nexport const onUserDeleteSucceeded = (id) => ({ type: USER_DELETE_SUCCEEDED, id: id });\r\nexport const onUserDeleteFailed = () => ({ type: USER_DELETE_FAILED });\r\n\r\nexport const onClearUserInfo = () => ({ type: CLEAR_USER_INFO })\r\nexport const setUserInfo = (user)=>({type:SET_USER_INFO,payload:user})\r\n/* Actions */\r\n\r\nexport const getUserList = () => {\r\n    return dispatch => {\r\n        dispatch(onUserListRequested())\r\n        Axios.get(API + 'users').then(res => res.data)\r\n            .then(result => {\r\n                dispatch(onUserListSucceeded(result.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserInfo = (id) => {\r\n    return dispatch => {\r\n        dispatch(onUserInfoRequested())\r\n        Axios.get(API + 'users/' + id).then(res => res.data)\r\n            .then(result => {\r\n                dispatch(onUserInfoSucceeded(result.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const createUser = (email, first_name,last_name, role, enabled,license, regions, countries) => {\r\n    return dispatch => {\r\n        dispatch(onUserCreateRequested());\r\n        Axios.post(API + 'users', { email, first_name,last_name, role, enabled,license, regions, countries}).then(res => {\r\n            alert('User Created')\r\n            dispatch(onUserCreateSucceeded(res.data))\r\n        })\r\n        .catch(err=>{\r\n            alert(\"Could not create user\");\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = () => {\r\n    return (dispatch,getState) => {\r\n        let user=getState().users.editing\r\n        dispatch(onUserCreateRequested());\r\n        Axios.put(API + 'users/' + user.id,user ).then(res => {\r\n            alert('User Updated')\r\n            dispatch(onUserCreateSucceeded(res.data))\r\n        })\r\n        .catch(err=>{\r\n            alert('Could not update user')\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n\r\n    return dispatch => {\r\n        if (window.confirm('Seguro desea eliminar este usuario?')) {\r\n            dispatch(onUserDeleteRequested());\r\n            Axios.delete(API + 'users/' + id).then(res => {\r\n                dispatch(onUserDeleteSucceeded(id))\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearUserInfo = () => {\r\n    return dispatch => {\r\n        dispatch(onClearUserInfo())\r\n    }\r\n}\r\n\r\nexport const setUser = (user)=>{\r\n    return dispatch =>{\r\n        dispatch(setUserInfo(user))\r\n    }\r\n}\r\n\r\n/** Initial State */\r\nconst initialState = {\r\n    list: [],\r\n    regions: [],\r\n    countries: [],\r\n    fetchingList: false,\r\n    editing: {}\r\n}\r\n\r\n/** Reducer */\r\n\r\nfunction userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUESTED:\r\n            return {\r\n                ...state,\r\n                fetchingList: true\r\n            }\r\n        case USER_LIST_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                fetchingList: false,\r\n                list: action.list\r\n            }\r\n        case USER_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                fetchingList: false\r\n            }\r\n        case USER_INFO_REQUESTED:\r\n            return {\r\n                ...state,\r\n                fetchingList: true,\r\n            }\r\n        case USER_INFO_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                fetchingList: false,\r\n                editing: action.user\r\n            }\r\n        case USER_INFO_FAILED:\r\n            return {\r\n                ...state,\r\n                fetchingList: false\r\n            }\r\n        case CLEAR_USER_INFO:\r\n            return {\r\n                ...state,\r\n                editing: {}\r\n            }\r\n        case SET_USER_INFO:{\r\n            return{\r\n                ...state,\r\n                editing:action.payload\r\n            }\r\n        }\r\n        case USER_CREATE_REQUESTED:\r\n            return {\r\n                ...state\r\n            }\r\n        case USER_CREATE_SUCCEEDED:\r\n            return {\r\n                ...state\r\n            }\r\n        case USER_CREATE_FAILED:\r\n            return {\r\n                ...state\r\n            }\r\n        case USER_UPDATE_REQUESTED:\r\n            return state\r\n        case USER_UPDATE_SUCCEEDED:\r\n            return state\r\n        case USER_UPDATE_FAILED:\r\n            return state\r\n        case USER_DELETE_REQUESTED:\r\n            return state\r\n        case USER_DELETE_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                list:state.list.filter(x=>x.id!==action.id)\r\n            }\r\n        case USER_DELETE_FAILED:\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst FormInitialState = {\r\n    id: null,\r\n    first_name: '',\r\n    last_name: '',\r\n    role: '',\r\n    email: '',\r\n    enabled: 0\r\n}\r\n\r\n\r\nexport default userReducer","import { API } from \"../utils\";\r\nimport Axios from \"axios\";\r\n\r\n/** Action Types */\r\nexport const REGION_LIST_REQUESTED = 'REGION_LIST_REQUESTED';\r\nexport const REGION_LIST_SUCCEEDED = 'REGION_LIST_SUCCEEDED';\r\nexport const REGION_LIST_FAILED = 'REGION_LIST_FAILED';\r\n\r\nexport const REGION_INFO_REQUESTED = 'REGION_INFO_REQUESTED';\r\nexport const REGION_INFO_SUCCEEDED = 'REGION_INFO_SUCCEEDED';\r\nexport const REGION_INFO_FAILED = \"REGION_INFO_FAILED\";\r\n\r\nexport const REGION_UPDATE_REQUESTED = 'REGION_UPDATE_REQUESTED';\r\nexport const REGION_UPDATE_SUCCEEDED = \"REGION_UPDATE_SUCCEEDED\";\r\nexport const REGION_UPDATE_FAILED = \"REGION_UPDATE_FAILED\";\r\n\r\n/** Action Creators */\r\nexport const onRegionListRequested = () => ({ type: REGION_LIST_REQUESTED });\r\nexport const onRegionListSucceeded = (regionList) => ({ type: REGION_LIST_SUCCEEDED, list:regionList })\r\nexport const onRegionListFailed = () => ({ type: REGION_LIST_FAILED });\r\n\r\n\r\n/* Actions */\r\nexport const getRegionList = ()=>{\r\n    return dispatch=>{\r\n        dispatch(onRegionListRequested())\r\n        Axios.get(API + 'regions').then(res => res.data)\r\n            .then(result => {\r\n                   dispatch(onRegionListSucceeded(result.data))\r\n            })\r\n    }\r\n}\r\n\r\n/** Initial State */\r\nconst initialState = {\r\n    list: [],\r\n    current: {},\r\n    fetchingList: false,\r\n}\r\n\r\n/** Reducer */\r\n\r\nfunction RegionReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REGION_LIST_REQUESTED:\r\n            return {\r\n                ...state,\r\n                fetchingList: true\r\n            }\r\n        case REGION_LIST_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                fetchingList:false,\r\n                list:action.list\r\n            }\r\n        case REGION_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                fetchingList:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default RegionReducer","import { API } from \"../utils\";\r\nimport Axios from \"axios\";\r\n\r\n/** Action Types */\r\nexport const COUNTRY_LIST_REQUESTED = 'COUNTRY_LIST_REQUESTED';\r\nexport const COUNTRY_LIST_SUCCEEDED = 'COUNTRY_LIST_SUCCEEDED';\r\nexport const COUNTRY_LIST_FAILED = 'COUNTRY_LIST_FAILED';\r\n\r\nexport const COUNTRY_INFO_REQUESTED = 'COUNTRY_INFO_REQUESTED';\r\nexport const COUNTRY_INFO_SUCCEEDED = 'COUNTRY_INFO_SUCCEEDED';\r\nexport const COUNTRY_INFO_FAILED = \"COUNTRY_INFO_FAILED\";\r\n\r\nexport const COUNTRY_UPDATE_REQUESTED = 'COUNTRY_UPDATE_REQUESTED';\r\nexport const COUNTRY_UPDATE_SUCCEEDED = \"COUNTRY_UPDATE_SUCCEEDED\";\r\nexport const COUNTRY_UPDATE_FAILED = \"COUNTRY_UPDATE_FAILED\";\r\n\r\n\r\n/** Action Creators */\r\n\r\nexport const onCountryListRequested = () => ({ type: COUNTRY_LIST_REQUESTED });\r\nexport const onCountryListSucceeded = (countryList) => ({ type: COUNTRY_LIST_SUCCEEDED, list:countryList })\r\nexport const onCountryListFailed = () => ({ type: COUNTRY_LIST_FAILED });\r\n\r\n\r\n/* Actions */\r\n\r\nexport const getCountryList = ()=>{\r\n    return dispatch=>{\r\n        dispatch(onCountryListRequested())\r\n        Axios.get(API + 'countries').then(res => res.data)\r\n            .then(result => {\r\n                   dispatch(onCountryListSucceeded(result.data))\r\n            })\r\n    }\r\n}\r\n\r\n/** Initial State */\r\nconst initialState = {\r\n    list: [],\r\n    current: {},\r\n    fetchingList: false,\r\n}\r\n\r\n/** Reducer */\r\n\r\nfunction CountryReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case COUNTRY_LIST_REQUESTED:\r\n            return {\r\n                ...state,\r\n                fetchingList: true\r\n            }\r\n        case COUNTRY_LIST_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                fetchingList:false,\r\n                list:action.list\r\n            }\r\n        case COUNTRY_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                fetchingList:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CountryReducer","import React, { useState, useEffect } from 'react';\r\nimport { Table, FormControl, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown, faEye, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Axios from 'axios';\r\nimport { API } from '../../utils';\r\nexport const CrudTable = (props) => {\r\n\tconst [direction, setDirection] = useState(true);\r\n\tconst [order, setOrder] = useState(null)\r\n\tconst [data, setData] = useState([]);\r\n\tconst [filters, setFilters] = useState({})\r\n\tuseEffect(() => {\r\n\t\tconsole.log('effecting')\r\n\t\tlet newArray = data.sort((a, b) => {\r\n\t\t\tif (direction) {\r\n\t\t\t\treturn a[order] > b[order] ? -1 : 1\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn a[order] > b[order] ? 1 : -1\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetData(newArray)\r\n\t}, [direction, order, filters])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(props.resource)\r\n\t}, [props])\r\n\r\n\tconst sortTable = (order, direction) => {\r\n\t\tsetOrder(order);\r\n\t\tsetDirection(direction)\r\n\t}\r\n\r\n\tconst filterTable = (filters) => {\r\n\t\tconsole.log(filters);\r\n\t\tconst oldData = props.resource;\r\n\t\tconst newData = oldData.filter(row => {\r\n\t\t\tlet shown = true;\r\n\t\t\tObject.keys(filters).map(filter => {\r\n\t\t\t\tif (row[filter].toString() !== filters[filter] && filters[filter] !== 'all') {\r\n\t\t\t\t\tshown = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn shown;\r\n\t\t})\r\n\t\tsetData(newData)\r\n\t}\r\n\r\n\tconst addFilter = (filtername, filtervalue) => {\r\n\t\tconsole.log(filtername, filtervalue);\r\n\t\tlet f = { ...filters }\r\n\t\tf[filtername] = filtervalue;\r\n\t\tconsole.log(f)\r\n\t\tsetFilters(f)\r\n\t\tfilterTable(f)\r\n\t}\r\n\r\n\tconst handleDelete = (e) => {\r\n\t\tif (window.confirm('Seguro que desea eliminar este registro?')) {\r\n\t\t\tAxios.delete(API + 'files/' + e).then(res => {\r\n\t\t\t\tif (res.data.message === 'Deleted Successfully') {\r\n\t\t\t\t\tsetData(data.filter(x => x.id !== e))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\talert(\"Failure\")\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t\t< Table size='sm' variant='bordered'>\r\n\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.headers.map((header, index) => (\r\n\t\t\t\t\t\t\t<td onClick={() => sortTable(header.name, !direction)} key={index}>\r\n\t\t\t\t\t\t\t\t{header.name} {order === header && <FontAwesomeIcon icon={direction ? faCaretUp : faCaretDown} />}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<td colSpan={3}>ACCIONES</td>\r\n\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{props.headers.map((header, index) => (\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\theader.filter && (\r\n\t\t\t\t\t\t\t\t\t<FormControl size='sm' as='select' onChange={({ target }) => addFilter(header.filter, target.value)}>\r\n\t\t\t\t\t\t\t\t\t\t<option value='all' > </option>\r\n\t\t\t\t\t\t\t\t\t\t{[...new Set(props.resource.map(r => header.value(r)))].map(value => {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\treturn <option value={value}>{value}</option>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<td style={{ verticalAlign: 'middle', textAlign: 'center' }}>Ver</td>\r\n\t\t\t\t\t<td style={{ verticalAlign: 'middle', textAlign: 'center' }}>Edit</td>\r\n\t\t\t\t\t<td style={{ verticalAlign: 'middle', textAlign: 'center' }}>Elim</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.map((element, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.headers.map((header, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td key={index}>{header.value(element)}</td>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<td style={{ width: 50 }}>\r\n\t\t\t\t\t\t\t\t\t<Button block variant='info' size='sm' as={Link} to={'/' + props.for + '/' + element.id}><FontAwesomeIcon icon={faEye} /></Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style={{ width: 50 }}>\r\n\t\t\t\t\t\t\t\t\t<Button block size='sm' as={Link} to={'/' + props.for + '/' + element.id + '/edit'}><FontAwesomeIcon icon={faEdit} /></Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style={{ width: 50 }}>\r\n\t\t\t\t\t\t\t\t\t<Button block variant='danger' size='sm' onClick={() => handleDelete(element.id)}><FontAwesomeIcon icon={faTimes} /></Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</tbody>\r\n\t\t</Table >\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { API } from '../../utils';\r\nimport { Row, Col, Card, Table, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { CrudTable } from './Table';\r\n\r\nclass CrudIndex extends React.Component{\r\n    state={\r\n        resource:[]\r\n    }\r\n    componentDidMount(){\r\n        Axios.get(API+this.props.for).then(res=>res.data).then(result=>{this.setState({resource:result.data})})\r\n    }\r\n    render(){\r\n        let headers= this.props.headers\r\n        let headerkeys = Object.keys(headers)\r\n        return(\r\n            <Row id='crudIndex'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header className='text-center'>LISTADO</Card.Header>\r\n                        <Card.Body>\r\n                            <Button className='my-2' size='sm' as={Link} to={this.props.for+'/new'}>Nuevo</Button>\r\n                            <CrudTable headers={headers} headerkeys={headerkeys} for={this.props.for} resource={this.state.resource}></CrudTable>\r\n                        </Card.Body>\r\n                    </Card>\r\n          \r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CrudIndex;","import React from 'react';\r\n\r\nexport const NewUser = props =>{\r\n    return(\r\n        <p>Feature disabled due to new Sign Up Flow</p>\r\n    )\r\n}","import React from 'react'\r\nimport { Field, reduxForm, formValueSelector, getFormInitialValues } from 'redux-form'\r\nimport { Form, Row, Col, Card, FormControl, FormCheck, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getRegionList } from '../../ducks/regions';\r\nimport { getCountryList } from '../../ducks/countries';\r\nimport { setUserInfo, updateUser } from '../../ducks/user';\r\nlet UserForm = ({ id, getUserInfo, user, getRegionList, getCountryList, regions, countries,setUserInfo,updateUser }) => {\r\n    useEffect(() => {\r\n        getRegionList()\r\n        getUserInfo(id)\r\n        getCountryList()\r\n    }, [])\r\n\r\n    const handleChange = (e)=>{\r\n        let oldUser = {...user};\r\n        oldUser[e.target.name]=e.target.value\r\n        setUserInfo(oldUser)\r\n\r\n    }\r\n\r\n    const toggleRegion = (regionId)=>{\r\n        let oldUser = {...user}\r\n        let r = oldUser.regions.find(r=>r.region===regionId);\r\n        if(r){\r\n            r.checked=!r.checked\r\n        }\r\n        else{\r\n            oldUser.regions.push({region:regionId,checked:true})\r\n        }\r\n        setUserInfo(oldUser);\r\n    }\r\n\r\n    const toggleCountry = (countryId) =>{\r\n        let oldUser = {...user}\r\n        let r = oldUser.countries.find(r=>r.country===countryId);\r\n        if(r){\r\n            r.checked=!r.checked\r\n        }\r\n        else{\r\n            oldUser.countries.push({country:countryId,checked:true})\r\n        }\r\n        setUserInfo(oldUser);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        updateUser()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n            <Row noGutters style={{height:'60vh'}}>\r\n                <Col sm={4}>\r\n                    <Card className='h-100' style={{borderRadius:0}}>\r\n                        <Card.Header className='text-center'  style={{borderRadius:0}}>Datos Generales</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Form.Group>\r\n                                <label>Nombre(s):</label>\r\n                                <FormControl name='first_name' size='sm' value={user.first_name} onChange={(e)=>handleChange(e)}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <label>Apellido(s):</label>\r\n                                <FormControl name='last_name' size='sm' value={user.last_name} onChange={(e)=>handleChange(e)}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <label>Rol:</label>\r\n                                <FormControl as='select' name='role' size='sm' value={user.role} onChange={(e)=>handleChange(e)}>\r\n                                    <option value=''>Seleccione...</option>\r\n                                    <option value='staff'>STAFF</option>\r\n                                    <option value='agent'>AGENTE</option>\r\n                                    <option value='client'>CLIENTE</option>\r\n                                </FormControl>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <label>Email:</label>\r\n                                <FormControl component='input' type='email' name='email' size='sm' value={user.email} onChange={(e)=>handleChange(e)}/>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Col sm={3}>\r\n                                    <label>Codigo</label>\r\n                                    <FormControl name='countrycode' size='sm' value={user.countrycode} onChange={(e)=>handleChange(e)} />\r\n                                </Col>\r\n                                <Col sm={9}>\r\n                                    <label>Whatsapp</label>\r\n                                    <FormControl name='whatsapp' size='sm' value={user.whatsapp} onChange={(e)=>handleChange(e)}/>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={4} className='h-100'>\r\n                    <Card className='h-100'>\r\n                        <Card.Header className='text-center'  style={{borderRadius:0}}>Regiones</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Row>\r\n\r\n                                {\r\n                                    regions && regions.map(region => {\r\n                                        return (\r\n                                            <Col sm={6}>\r\n                                                <FormCheck \r\n                                                    checked={user.regions && user.regions.find(r => r.region === region.id) && user.regions.find(r => r.region === region.id).checked} label={region.name} \r\n                                                    onChange={(e)=>toggleRegion(region.id)}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <Card className='h-100'>\r\n                        <Card.Header className='text-center' style={{borderRadius:0}}>Paises</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Row>\r\n\r\n                                {\r\n                                    countries && countries.map(country => {\r\n                                        return (\r\n                                            <Col sm={6}>\r\n                                                <FormCheck \r\n                                                    checked={user.countries && user.countries.find(r => r.country === country.id) && user.countries.find(r => r.country === country.id).checked} label={country.name} \r\n                                                    onChange={(e)=>toggleCountry(country.id)}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12} className='text-center mt-2'>\r\n                <Button type='submit'>Enviar</Button>\r\n                </Col>\r\n            </Row>\r\n                               \r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        user: state.users.editing,\r\n        regions: state.regions.list,\r\n        countries: state.countries.list\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        getRegionList: () => dispatch(getRegionList()),\r\n        getCountryList: () => dispatch(getCountryList()),\r\n        setUserInfo:(newUser)=>dispatch(setUserInfo(newUser)),\r\n        updateUser:()=>dispatch(updateUser())\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm)","import React from 'react';\r\nimport { Row, Card, Col } from 'react-bootstrap';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport const UserShow = ({id,getUserInfo,users}) =>{\r\n    const user = users.editing\r\n   \r\n    useEffect(()=>{\r\n        getUserInfo(id)\r\n       \r\n    },[])\r\n    return(\r\n        <Row>\r\n            <Col sm={4}>\r\n                <Card>\r\n                    <Card.Header>Datos Generales</Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <p>Nombre:</p>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <p>{user.first_name}</p>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <p>Apellido:</p>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <p>{user.last_name}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Card>\r\n                    <Card.Header>Stats</Card.Header>\r\n                    <Card.Body>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Container} from 'react-bootstrap'\r\nimport { getUserList, getUserInfo, clearUserInfo, createUser, updateUser, deleteUser } from '../../ducks/user';\r\nimport { connect } from 'react-redux';\r\nimport { getRegionList } from '../../ducks/regions';\r\nimport { getCountryList } from '../../ducks/countries';\r\nimport CrudIndex from '../crud/Index';\r\nimport { NewUser } from './NewUser';\r\nimport UserForm from './Form';\r\nimport { UserShow } from './Show';\r\n\r\nconst Users = (props) => {\r\n    const headers = [\r\n        { name: 'ID', value: (e) => e.id, filter: 'id' },\r\n        { name: 'email', value: (e) => e.email, filter: 'email' },\r\n        { name: 'Nombre(s)', value: (e) => e.first_name, filter: 'first_name' },\r\n        { name: \"Apellidos(s)\", value: (e) => e.last_name, filter: 'last_name' },\r\n        { name: \"Rol\", value: (e) => e.role, filter: 'role' },\r\n\r\n    ]\r\n\r\n    return (\r\n        <Container fluid style={{ marginTop: 30 }}>\r\n            <Switch>\r\n                <Route exact path='/users' render={(matchProps) => <CrudIndex headers={headers} for='users' />} />\r\n                <Route exact path='/users/new' render={(matchProps) => <NewUser />} />\r\n                <Route exact path='/users/:id' render={(matchProps)=><UserShow {...props} id={matchProps.match.params.id}/>}/>\r\n                <Route exact path='/users/:id/edit' render={(matchProps) => <UserForm id={matchProps.match.params.id} getUserInfo={props.getUserInfo} />} />\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.users,\r\n    regions: state.regions,\r\n    countries: state.countries\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUserList: () => dispatch(getUserList()),\r\n    getRegionList: () => dispatch(getRegionList()),\r\n    getCountryList: () => dispatch(getCountryList()),\r\n    getUserInfo: (id) => dispatch(getUserInfo(id)),\r\n    clearUserInfo: () => dispatch(clearUserInfo()),\r\n    createUser: (email, first_name, last_name, role, enabled, license, regions, countries) => dispatch(createUser(email, first_name, last_name, role, enabled, license, regions, countries)),\r\n    updateUser: (id, email, first_name, last_name, role, enabled, license, regions, countries) => dispatch(updateUser(id, email, first_name, last_name, role, enabled, license, regions, countries)),\r\n    deleteUser: (id) => dispatch(deleteUser(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n","import React from 'react';\r\nimport { Row, Col, Tabs, Tab, Table } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { API, APIHEADERS } from '../../utils';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PlanShow extends React.Component {\r\n    state = {\r\n        plan: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(API + 'plans/' + this.props.match.params.id, { headers: APIHEADERS }).then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan: result.data\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        let plan = this.state.plan\r\n        return (\r\n\r\n            <Row>\r\n\r\n                {\r\n                    plan ?\r\n                        <React.Fragment>\r\n                            <Col sm={12}>\r\n                                <h3 className=\"text-center\">{plan.name}</h3>\r\n                            </Col>\r\n\r\n                            <Col sm={12}>\r\n                                <Tabs defaultActiveKey=\"general\" id=\"noanim-tab-example\" className='nav-justified'>\r\n                                    <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"general\" title=\"Plan\">\r\n                                        <Table>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Compañia</th>\r\n                                                    <th>Region</th>\r\n                                                    <th>Tipo</th>\r\n                                                    <th>Status</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>{plan.id}</th>\r\n                                                    <th>{plan.company}</th>\r\n                                                    <th>{plan.region}</th>\r\n                                                    <th>{plan.plan_type}</th>\r\n                                                    <th>{plan.enabled ? 'Activo' : 'Inactivo'}</th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>\r\n                                                        <Link to={'/plans/'+plan.id+'/edit'}>Editar plan</Link>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"rates\" style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title=\"Tarifas\">\r\n                                        <Tabs className='nav-justified'>\r\n                                            {\r\n                                                [...new Set(plan.rates.map(item => item.deductible))].map(ded => {\r\n                                                    return (\r\n                                                        <Tab eventKey={'deductible_' + ded} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={ded}>\r\n                                                            <Table size='sm' variant='hover'>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>Desde</th>\r\n                                                                        <th>Hasta</th>\r\n                                                                        <th>Anual</th>\r\n                                                                        <th>Semestral</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {\r\n                                                                        plan.rates.filter(x => x.deductible === ded).map(rate => {\r\n                                                                            return (\r\n                                                                                <tr>\r\n                                                                                    <td>{rate.min_age}</td>\r\n                                                                                    <td>{rate.max_age}</td>\r\n                                                                                    <td>{rate.yearly_price}</td>\r\n                                                                                    <td>{rate.biyearly_price}</td>\r\n                                                                                </tr>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </Table>\r\n\r\n                                                        </Tab>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </Tabs>\r\n                                    </Tab>\r\n                                    <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"endosos\" title=\"Endosos\">\r\n                                        <Tabs className='nav-justified'>\r\n                                            {\r\n                                                plan.endosos.map(endoso => {\r\n                                                    return (\r\n                                                        <Tab eventKey={'endoso_' + endoso.id} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={endoso.name}>\r\n                                                            <Table>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>Deducible</th>\r\n                                                                        <th>Disponible</th>\r\n                                                                        <th>Seleccionado</th>\r\n                                                                        <th>Incluido</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                   {endoso.endoso_configs.map(ec=>{\r\n                                                                       return(\r\n                                                                           <tr>\r\n                                                                               <td>{ec.deductible}</td>\r\n                                                                               <td>{ec.avaliable?'SI':'NO'}</td>\r\n                                                                               <td>{ec.selected?'SI':'NO'}</td>\r\n                                                                               <td>{ec.included?'SI':'NO'}</td>\r\n                                                                           </tr>\r\n                                                                       )\r\n                                                                   })}\r\n                                                                </tbody>\r\n                                                            </Table>\r\n                                                        </Tab>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Tabs>\r\n                                    </Tab>\r\n                                    <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"kidrates\" title=\"Tarifas (Niños)\">\r\n                                        <Tabs className='nav-justified'>\r\n                                            {\r\n                                                [...new Set(plan.rates.map(item => item.deductible))].map(ded => {\r\n                                                    return (\r\n                                                        <Tab eventKey={'deductible_' + ded} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={ded}>\r\n                                                            <Table size='sm' variant='hover'>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th># Hijos</th>\r\n\r\n                                                                        <th>Anual</th>\r\n                                                                        <th>Semestral</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {\r\n                                                                        plan.kid_rates.filter(x => x.deductible === ded).map(rate => {\r\n                                                                            return (\r\n                                                                                <tr>\r\n                                                                                    <td>{rate.num_kids}</td>\r\n\r\n                                                                                    <td>{rate.yearly_price}</td>\r\n                                                                                    <td>{rate.biyearly_price}</td>\r\n                                                                                </tr>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </Table>\r\n\r\n                                                        </Tab>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Tabs>\r\n                                    </Tab>\r\n                                </Tabs>\r\n                            </Col>\r\n                        </React.Fragment>\r\n                        : null\r\n                }\r\n\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PlanShow\r\n\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { API, APIHEADERS } from '../../utils';\r\nimport { parseCSV } from '../../utils';\r\n\r\nclass PlansLogic extends React.Component {\r\n    state = {\r\n        plan: null,\r\n        companies: [],\r\n        regions: [],\r\n        new_record_id:-1\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        Axios.get(API + 'plans/' + this.props.match.params.id, { headers: APIHEADERS }).then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan: result.data\r\n                })\r\n            })\r\n        this.getRegions()\r\n\r\n    }\r\n    \r\n    createRateObject(deductible){\r\n     \r\n    }\r\n\r\n    generateNewId=()=>{\r\n       let id = this.state.new_record_id;\r\n        this.setState({\r\n            ...this.state,\r\n            new_record_id:id--\r\n        })\r\n        return id-1;\r\n    }\r\n\r\n    getRegions = () => {\r\n        Axios.get(API + 'regions', { headers: APIHEADERS }).then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    regions: result.data\r\n                })\r\n            })\r\n    }\r\n    // Cambios a Inputs del objeto raiz\r\n    handleMainChange = (e) => {\r\n\r\n        let plan = this.state.plan;\r\n        plan[e.target.name] = e.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            plan: plan\r\n        })\r\n    }\r\n    // Cambios a los rates\r\n    handleRateChange = (e) => {\r\n        let plan = this.state.plan\r\n        let id = parseInt(e.target.getAttribute('data-rate-id'));\r\n        plan.rates.find(x=>x.id===id)[e.target.name]=e.target.value\r\n        this.setState({\r\n            ...this.state,\r\n            plan: plan\r\n        })\r\n\r\n    }\r\n    // Eliminar el Rate\r\n    destroyRate = (e) => {\r\n        let plan = this.state.plan;\r\n        let id = parseInt(e.target.getAttribute('data-id'));\r\n        plan.rates.find(x=>x.id===id).destroy=true;\r\n        this.setState({\r\n            ...this.state,\r\n            plan:plan\r\n        })\r\n\r\n    }\r\n    // Maneja el boton de Subir CSV\r\n    handleRateCSVUpload = (files, evt) => {\r\n        let reader = new FileReader()\r\n        let csvFile = files[0]\r\n        reader.readAsText(csvFile);\r\n        reader.onload = event => {\r\n            let csv = event.target.result;\r\n            let parsedCSV = parseCSV(csv, ';', '\\n','plan_rates');\r\n            if (parsedCSV) {\r\n                let first_id = this.generateNewId();\r\n                let rates = parsedCSV.map(x=>{\r\n                    first_id--;\r\n                    return {...x,id:first_id}\r\n                });\r\n                let plan = this.state.plan;\r\n                plan.rates = rates;\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan: plan\r\n                })\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleKidRateCSVUpload= (files,evt)=>{\r\n        let reader = new FileReader();\r\n        let csvFile = files[0]\r\n        reader.readAsText(csvFile);\r\n        reader.onload = event=>{\r\n            let csv = event.target.result;\r\n            let parsedCSV = parseCSV(csv,';','\\n','kid_rates')\r\n            if(parsedCSV){\r\n                let first_id = this.generateNewId();\r\n                let kid_rates = parsedCSV.map(x=>{\r\n                    first_id--;\r\n                    return{...x,id:first_id}\r\n                })\r\n                let plan = this.state.plan;\r\n                plan.kid_rates=kid_rates;\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan:plan\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Submit al formulario\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(API + 'plans/' + this.props.match.params.id, this.state.plan, { headers: APIHEADERS }).then(res => res.data)\r\n            .then(result => {\r\n                if(result.errors===false){\r\n                    alert('Guardado con Exito')\r\n                }\r\n            })\r\n    }\r\n    // Clickear en la pestaña de agregar deducible\r\n    createNewDeductible = (key) => {\r\n        if (key === 'newDed') {\r\n            let ded = window.prompt('Indique el valor del nuevo deducible');\r\n            \r\n            if(ded!==''){\r\n                let plan = this.state.plan;\r\n                plan.rates.push({ id:this.generateNewId(),min_age: 0, max_age: 99, deductible:parseInt(ded), yearly_price: 0, biyearly_price: 0,newRecord:true});\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan: plan\r\n                })\r\n            }\r\n        }\r\n    }\r\n    // Nueva pestaña de endosos\r\n    createNewEndoso = (key)=>{\r\n        if(key==='newEndoso'){\r\n            let endoso = window.prompt(\"Indique el nombre del nuevo endoso\")\r\n            let price = window.prompt(\"Cual es el costo de este endoso?\")\r\n            if(endoso){\r\n                let newEndoso = {\r\n                    id:this.generateNewId(),\r\n                    name:endoso,\r\n                    price:price,\r\n                    endoso_configs:[]\r\n                }\r\n                let deductibles=[...new Set(this.state.plan.rates.map(item => item.deductible))]\r\n                deductibles.map((x,index)=>newEndoso.endoso_configs.push({id:this.generateNewId()-index,selected:0,deductible:x,avaliable:0,included:0}))\r\n                let plan = this.state.plan;\r\n                plan.endosos.push(newEndoso)\r\n                this.setState({\r\n                    ...this.state,\r\n                    plan: plan\r\n                })\r\n                \r\n            }\r\n          \r\n        }\r\n    }\r\n   \r\n    // Nuevo rate\r\n    addNewRate=(ded)=>{\r\n        let plan = this.state.plan;\r\n        let newId = this.generateNewId();\r\n        plan.rates.push({id:newId,min_age:0,max_age:99,deductible:ded,yearly_price:0,biyearly_price:0,newRecord:true})\r\n        this.setState({\r\n            ...this.state,\r\n            plan:plan\r\n        })\r\n    }\r\n\r\n    // Cambios a endoso configs\r\n    handleEndosoConfigChange=(e)=>{\r\n       let plan = this.state.plan\r\n       let id = parseInt(e.target.getAttribute('data-id'));\r\n       let endoso =parseInt(e.target.getAttribute('data-endoso'));\r\n       console.log(plan,id,endoso)\r\n       plan.endosos.find(x=>x.id === endoso).endoso_configs.find(x=>x.id===id)[e.target.name]=e.target.checked?1:0\r\n       this.setState({\r\n           ...this.state,\r\n           plan:plan\r\n       })\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default PlansLogic","import React, { Fragment } from 'react';\r\nimport { Table, FormControl, Button } from 'react-bootstrap';\r\nexport const PlanTab = (props) => {\r\n    let { plan, regions } = props\r\n    return (\r\n        <Fragment>\r\n            <Button size='sm' variant='success' className='my-2' type='submit'>Guardar</Button>\r\n            <Table size='sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Compañia</th>\r\n                        <th>Region</th>\r\n                        <th>Tipo</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>{plan.id}</th>\r\n                        <th>\r\n                            <FormControl size='sm' name='name' value={plan.name} onChange={props.handleMainChange} />\r\n                        </th>\r\n                        <th>\r\n                            <FormControl name='company_id' size='sm' as='select' value={plan.company_id} onChange={props.handleMainChange}>\r\n                                <option disabled value=\"\">Seleccione...</option>\r\n                                <option value='1'>Allianz Care</option>\r\n                                <option value='2'>Vumi Group</option>\r\n                                <option value='3'>Best Doctors Insurance</option>\r\n                                <option value='5'>Bupa Salud</option>\r\n                                <option value='6'>BMI</option>\r\n                            </FormControl>\r\n                        </th>\r\n                        <th>\r\n                            <FormControl size='sm' name='region_id' as='select' value={plan.region_id} onChange={props.handleMainChange}>\r\n                                <option disabled value=\"\">Seleccione...</option>\r\n                                {regions.filter(x => x.company_id == plan.company_id).map((region, k) => {\r\n                                    return (<option key={k} value={region.id}>{region.name}</option>)\r\n                                })}\r\n                            </FormControl>\r\n                        </th>\r\n                        <th>{plan.plan_type}</th>\r\n                        <th>\r\n                            <FormControl name='enabled' size='sm' as='select' value={plan.enabled} onChange={props.handleMainChange}>\r\n                                <option value='1'>Activo</option>\r\n                                <option value='0'>Inactivo</option>\r\n                            </FormControl>\r\n                        </th>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <h3 className=\"text-center\">Beneficios</h3>\r\n\r\n            <Table size='sm' variant='bordered'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Beneficio</th>\r\n                        <th style={{width:'70%'}}>Descripcion</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        plan.benefits.map(benefit => (\r\n                            <tr>\r\n                                <td>{benefit.benefit_id}</td>\r\n                                <td>{benefit.name}</td>\r\n                                <td>\r\n                                    <FormControl rows={6} size='sm' as='textarea'>\r\n                                    {benefit.description.replace('\\\\','\\n')}\r\n                                    </FormControl>\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n","import React,{ Fragment } from 'react';\r\nimport InputFiles from 'react-input-files';\r\nimport {Button,Tabs,Tab,Table,FormControl} from 'react-bootstrap'\r\nexport const RatesTab = props => {\r\n    let {plan,handleRateCSVUpload,createNewDeductible,handleRateChange,destroyRate}=props\r\n    return (\r\n        <Fragment>\r\n            <InputFiles onChange={handleRateCSVUpload} accept='.csv'>\r\n                <Button variant='info' style={{ marginBottom: 20 }} size='sm'>Cargar Archivo CSV</Button>\r\n            </InputFiles>\r\n            <Button size='sm' style={{ marginBottom: 20 }} type='submit'>Guardar</Button>\r\n            <Tabs className='nav-justified' onSelect={createNewDeductible}>\r\n                {\r\n                    [...new Set(plan.rates.map(item => item.deductible))].map((ded, k) => {\r\n                        return (\r\n                            <Tab key={k} eventKey={'deductible_' + ded} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={ded}>\r\n                                <Table size='sm' variant='condensed'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Desde</th>\r\n                                            <th>Hasta</th>\r\n                                            <th>Anual</th>\r\n                                            <th>Semestral</th>\r\n                                            <th>Eliminar</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            plan.rates.filter(x => x.deductible === ded).filter(x => !x.destroy).map((rate, k) => {\r\n                                                return (\r\n                                                    <tr key={k}>\r\n                                                        <td><FormControl name='min_age' data-rate-id={rate.id} value={rate.min_age} size='sm' type='number' onChange={handleRateChange} /></td>\r\n                                                        <td><FormControl name='max_age' data-rate-id={rate.id} value={rate.max_age} size='sm' type='number' onChange={handleRateChange} /></td>\r\n                                                        <td><FormControl name='yearly_price' data-rate-id={rate.id} value={rate.yearly_price} size='sm' type='number' onChange={handleRateChange} /></td>\r\n                                                        <td><FormControl name='biyearly_price' data-rate-id={rate.id} value={rate.biyearly_price?rate.biyearly_price:0} size='sm' type='number' onChange={handleRateChange} /></td>\r\n                                                        <td><Button block data-id={rate.id} onClick={destroyRate} size='sm'>Remove</Button></td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                    <tfoot>\r\n                                        <tr>\r\n                                            <td colSpan={5}><Button onClick={() => this.addNewRate(ded)} block>Add Rate</Button></td>\r\n                                        </tr>\r\n                                    </tfoot>\r\n                                </Table>\r\n\r\n                            </Tab>\r\n                        )\r\n                    })\r\n                }\r\n                <Tab eventKey='newDed' style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={'+'} />\r\n            </Tabs>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {Tabs,Tab,Table,FormCheck} from 'react-bootstrap';\r\nexport const RidersTab = props => {\r\n    let {plan,handleEndosoConfigChange,createNewEndoso}= props\r\n    return (\r\n        <Tabs className='nav-justified' onSelect={createNewEndoso}>\r\n            {\r\n                plan.endosos.map((endoso, k) => {\r\n                    return (\r\n                        <Tab key={k} eventKey={'endoso_' + k} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={endoso.name}>\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Deducible</th>\r\n                                        <th>Disponible</th>\r\n                                        <th>Seleccionado</th>\r\n                                        <th>Incluido</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {endoso.endoso_configs.map((ec, k) => {\r\n                                        return (\r\n                                            <tr key={k}>\r\n                                                <td>{ec.deductible}</td>\r\n                                                <td><FormCheck name='avaliable' data-endoso={endoso.id} data-id={ec.id} checked={ec.avaliable === 1} onClick={handleEndosoConfigChange} /></td>\r\n                                                <td><FormCheck name='selected' data-endoso={endoso.id} data-id={ec.id} checked={ec.selected === 1} onClick={handleEndosoConfigChange} /></td>\r\n                                                <td><FormCheck name='included' data-endoso={endoso.id} data-id={ec.id} checked={ec.included === 1} onClick={handleEndosoConfigChange} /></td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n\r\n                            </Table>\r\n                        </Tab>\r\n                    )\r\n                })\r\n            }\r\n            <Tab eventKey='newEndoso' style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={'+'} />\r\n        </Tabs>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport {Tabs,Tab,Table, Button} from 'react-bootstrap';\r\nimport InputFiles from 'react-input-files';\r\n\r\nexport const KidRatesTab = props => {\r\n    let {plan,handleKidRateCSVUpload}=props\r\n\r\n    return (\r\n        <Fragment>\r\n             <InputFiles onChange={handleKidRateCSVUpload} accept='.csv'>\r\n                <Button variant='info' style={{ marginBottom: 20 }} size='sm'>Cargar Archivo CSV</Button>\r\n            </InputFiles>\r\n            <Button size='sm' style={{ marginBottom: 20 }} type='submit'>Guardar</Button>\r\n        <Tabs className='nav-justified'>\r\n            {\r\n                [...new Set(plan.rates.map(item => item.deductible))].map((ded, k) => {\r\n                    return (\r\n                        <Tab key={k} eventKey={'deductible_' + ded} style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title={ded}>\r\n                            <Table size='sm' variant='hover'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th># Hijos</th>\r\n\r\n                                        <th>Anual</th>\r\n                                        <th>Semestral</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        plan.kid_rates.filter(x => x.deductible === ded).map((rate, k) => {\r\n                                            return (\r\n                                                <tr key={k}>\r\n                                                    <td>{rate.num_kids}</td>\r\n\r\n                                                    <td>{rate.yearly_price}</td>\r\n                                                    <td>{rate.biyearly_price}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Tab>\r\n                    )\r\n                })\r\n            }\r\n        </Tabs>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { Row, Col, Tabs, Tab, Form } from 'react-bootstrap';\r\nimport PlansLogic from './PlansLogic';\r\nimport { PlanTab } from './components/PlanTab';\r\nimport { RatesTab } from './components/RatesTab';\r\nimport { RidersTab } from './components/RidersTab';\r\nimport { KidRatesTab } from './components/KidRatesTab';\r\nclass PlanEdit extends PlansLogic {\r\n    render() {\r\n        let plan = this.state.plan\r\n        return (\r\n            <Row>\r\n                {\r\n                    plan ?\r\n                        <React.Fragment>\r\n                            <Col sm={12}>\r\n                                <h3 className=\"text-center\">{plan.name}</h3>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Tabs defaultActiveKey=\"general\" id=\"noanim-tab-example\" className='nav-justified'>\r\n                                        <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"general\" title=\"Plan\">\r\n                                            <PlanTab plan={plan} handleMainChange={this.handleMainChange} regions={this.state.regions} />\r\n                                        </Tab>\r\n                                        <Tab eventKey=\"rates\" style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} title=\"Tarifas\">\r\n                                            <RatesTab\r\n                                                plan={plan}\r\n                                                handleRateCSVUpload={this.handleRateCSVUpload}\r\n                                                createNewDeductible={this.createNewDeductible}\r\n                                                handleRateChange={this.handleRateChange}\r\n                                                destroyRate={this.destroyRate}\r\n                                            />\r\n                                        </Tab>\r\n                                        <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"endosos\" title=\"Endosos\">\r\n                                            <RidersTab plan={plan} handleEndosoConfigChange={this.handleEndosoConfigChange} createNewEndoso={this.createNewEndoso} />\r\n                                        </Tab>\r\n                                        <Tab style={{ border: '#4E5D6C 1px solid', borderTop: 'none', padding: 20 }} eventKey=\"kidrates\" title=\"Tarifas (Niños)\">\r\n                                            <KidRatesTab \r\n                                                plan={plan}\r\n                                                handleKidRateCSVUpload={this.handleKidRateCSVUpload}\r\n                                            />\r\n                                        </Tab>\r\n                                    </Tabs>\r\n\r\n                                </Form>\r\n                            </Col>\r\n                        </React.Fragment>\r\n                        : null\r\n                }\r\n\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default PlanEdit\r\n\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Row, Col, Tabs, Tab, Table, Form, FormControl, Button, FormCheck, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { API, APIHEADERS, groupBy } from '../../utils';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport InputFiles from 'react-input-files';\r\nimport PlansLogic from './PlansLogic';\r\nimport { RateRow, RateSetRow } from './components/RateRow';\r\nconst testDeds = [\r\n    { in: 1, out: 2 },\r\n    { in: 3, out: 4 },\r\n    { in: 5, out: 6 }\r\n]\r\n\r\nconst testAges = [\r\n    { min: 18, max: 24 },\r\n    { min: 25, max: 29 },\r\n    { min: 30, max: 34 }\r\n]\r\n\r\n/*\r\nRates = [\r\n    {\r\n        deductible:int,\r\n        deductible_out:int\r\n        values:[\r\n            {\r\n                min_age:int,\r\n                max_age:int,\r\n                yearly_price:int,\r\n                biyearly_price:int\r\n            }\r\n        ]\r\n    }\r\n\r\n]\r\n*/\r\n\r\nconst PlansNew = ({ location, regions, getRegionList }) => {\r\n    const [region_id, setRegionId] = useState('');\r\n    const [company_id, setCompanyId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [plan_type, setPlanType] = useState('');\r\n    const [enabled, setEnabled] = useState(0);\r\n    const [deductibles, setDeductibles] = useState([]);\r\n    const [ages, setAges] = useState([])\r\n    const [rates, setRates] = useState([]);\r\n    const [kidRates, setKidRates] = useState([]);\r\n    const [endosos, setEndosos] = useState([]);\r\n    const [formIn, setFormIn] = useState('');\r\n    const [formOut, setFormOut] = useState(\"\");\r\n    const [ageMin, setAgeMin] = useState('');\r\n    const [ageMax, setAgeMax] = useState(\"\");\r\n    useEffect(() => {\r\n        console.log(ages)\r\n        getRegionList();\r\n        let r = []\r\n        for (let i = 0; i < deductibles.length; ++i) {\r\n            let obj = {}\r\n            obj.deductible = deductibles[i].in\r\n            obj.deductible_out = deductibles[i].out\r\n            obj.values = [];\r\n            for (let j = 0; j < ages.length; ++j) {\r\n                obj.values.push({\r\n                    min_age: ages[j].min,\r\n                    max_age: ages[j].max,\r\n                    yearly_price: '',\r\n                    biyearly_price: ''\r\n                })\r\n            }\r\n            r.push(obj);\r\n        }\r\n        console.log('Effecting')\r\n        console.table(rates)\r\n        setRates(r);\r\n    }, [ages,deductibles])\r\n\r\n    const removeDedOption = (inside) => {\r\n        let x = deductibles.filter(x => x.in !== inside);\r\n        setDeductibles([...x])\r\n    }\r\n    const addDedOption = () => {\r\n        let inside = formIn;\r\n        let outside = formOut;\r\n        setDeductibles([...deductibles, { in: inside, out: outside }]);\r\n        setFormIn('');\r\n        setFormOut(\"\")\r\n    }\r\n\r\n    const removeAgeOption = (min) => {\r\n        let x = ages.filter(x => x.min !== min);\r\n        setAges([...x]);\r\n    }\r\n\r\n    const addAgeOption = () => {\r\n        let min = ageMin;\r\n        let max = ageMax;\r\n        setAges([...ages, { min: min, max: max }]);\r\n    }\r\n\r\n    const handlePriceChange = (e) => {\r\n        let newRates = [...rates] // [age,ded,type]\r\n        let arr = e.target.name.split('_');\r\n        if (arr[2] === 'yearly') {\r\n            newRates.find(obj => obj.deductible === arr[1]).values.find(a => a.min_age === arr[0]).yearly_price = e.target.value;\r\n        }\r\n        else {\r\n            newRates.find(obj => obj.deductible === arr[1]).values.find(a => a.min_age === arr[0]).biyearly_price = e.target.value;\r\n        }\r\n\r\n\r\n        setRates(newRates);\r\n\r\n\r\n\r\n\r\n    }\r\n    const getInputValue = (deductible, age, field) => {\r\n     \r\n        let r = rates.find(x => x.deductible === deductible.in);\r\n        if (r) {\r\n       \r\n            let a = r.values.find(z => z.min_age === age.min);\r\n            if (a) {\r\n                if (field === 'yearly_price') {\r\n                    return a.yearly_price;\r\n                }\r\n                else {\r\n                    return a.biyearly_price;\r\n                }\r\n\r\n            }\r\n            else {\r\n                return 'a'\r\n            }\r\n        }\r\n        else {\r\n            return 'b';\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <Row id='planForm'>\r\n            <Col sm={12}>\r\n                <Tabs defaultActiveKey=\"general\" className='nav-justified'>\r\n                    <Tab eventKey=\"general\" title=\"Plan\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Card className='h-100'>\r\n                                    <Card.Header>PLAN</Card.Header>\r\n                                    <Card.Body>\r\n                                        <FormGroup>\r\n                                            <FormLabel>Nombre del Plan</FormLabel>\r\n                                            <FormControl size='sm' name='name' value={name} onChange={({ target }) => setName(target.value)} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <FormLabel>Aseguradora</FormLabel>\r\n                                            <FormControl name='company_id' size='sm' as='select' value={company_id} onChange={({ target }) => setCompanyId(target.value)}>\r\n                                                <option disabled value=\"\">Seleccione...</option>\r\n                                                <option value='1'>Allianz Care</option>\r\n                                                <option value='2'>Vumi Group</option>\r\n                                                <option value='3'>Best Doctors Insurance</option>\r\n                                                <option value='5'>Bupa Salud</option>\r\n                                                <option value='6'>BMI</option>\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <FormLabel>Region</FormLabel>\r\n                                            <FormControl size='sm' name='region_id' as='select' value={region_id} onChange={({ target }) => setRegionId(target.value)}>\r\n                                                <option disabled value=\"\">Seleccione...</option>\r\n                                                {regions && regions.list.filter(x => x.company_id == company_id).map((region, k) => {\r\n                                                    return (<option key={k} value={region.id}>{region.name}</option>)\r\n                                                })}\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <FormLabel>Tipo de Plan</FormLabel>\r\n                                            <FormControl name='plan_type' size='sm' as='select' value={plan_type} onChange={({ target }) => setPlanType(target.value)}>\r\n                                                <option disabled value=\"\">Seleccione...</option>\r\n                                                <option value='Normal'>Normal</option>\r\n                                                <option value='Joint'>Joint</option>\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <FormLabel>Activo por Defecto</FormLabel>\r\n                                            <FormControl name='enabled' size='sm' as='select' value={enabled} onChange={({ target }) => setEnabled(target.value)}>\r\n                                                <option disabled value=\"\">Seleccione...</option>\r\n                                                <option value='1'>Activo</option>\r\n                                                <option value='0'>Inactivo</option>\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <Card>\r\n                                    <Card.Header>Configuracion del Plan</Card.Header>\r\n                                    <Card.Body>\r\n                                        <Row>\r\n                                            <Col sm={6}>\r\n\r\n                                                <Table size='sm' variant='bordered'>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th className='text-center blue' colSpan={3}>Deducibles</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className='blue ' style={{ width: '33%' }}>Inside</th>\r\n                                                            <th className='blue'>Outside</th>\r\n                                                            <th>--</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                <FormControl size='sm' value={formIn} onChange={({ target }) => setFormIn(target.value)} />\r\n                                                            </th>\r\n                                                            <th>\r\n                                                                <FormControl size='sm' value={formOut} onChange={({ target }) => setFormOut(target.value)} />\r\n                                                            </th>\r\n                                                            <th>\r\n                                                                <Button block size='sm' variant='success' onClick={() => addDedOption()}>Agregar</Button>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            deductibles.map((deductible) => (\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <label className='my-0'>{deductible.in}</label>\r\n                                                                    </td>\r\n                                                                    <td sm={4}>\r\n                                                                        <label className='my-0'>{deductible.out}</label>\r\n                                                                    </td>\r\n                                                                    <td sm={4}>\r\n                                                                        <Button block size='sm' variant='danger' onClick={() => removeDedOption(deductible.in)}>Quitar</Button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n\r\n                                            </Col>\r\n                                            <Col sm={6}>\r\n\r\n                                                <Table size='sm' variant='bordered'>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th className='text-center blue' colSpan={3}>Rangos Etarios</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className='blue ' style={{ width: '33%' }}>Min</th>\r\n                                                            <th className='blue'>Max</th>\r\n                                                            <th>--</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                <FormControl size='sm' value={ageMin} onChange={({ target }) => setAgeMin(target.value)} />\r\n                                                            </th>\r\n                                                            <th>\r\n                                                                <FormControl size='sm' value={ageMax} onChange={({ target }) => setAgeMax(target.value)} />\r\n                                                            </th>\r\n                                                            <th>\r\n                                                                <Button block size='sm' variant='success' onClick={() => addAgeOption()}>Agregar</Button>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            ages.map((age) => (\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <label className='my-0'>{age.min}</label>\r\n                                                                    </td>\r\n                                                                    <td sm={4}>\r\n                                                                        <label className='my-0'>{age.max}</label>\r\n                                                                    </td>\r\n                                                                    <td sm={4}>\r\n                                                                        <Button block size='sm' variant='danger' onClick={() => removeAgeOption(age.min)}>Quitar</Button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='my-5'>\r\n                            <Col sm={12} className='d-flex justify-content-end'>\r\n                                <Button>Siguiente</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"rates\" title=\"Tarifas\">\r\n                        {\r\n                            deductibles.length > 0 && ages.length > 0 ?\r\n                                <Table size='sm' variant='bordered' id='tarifario'>\r\n                                    <thead>\r\n                                        <tr className='blue-bg'>\r\n                                            <th style={{ width: '25%' }} colSpan={2} className='col-right'>En Usa</th>\r\n                                            {deductibles.map(x => <th className='text-right col-right' colSpan={2}>${x.in}</th>)}\r\n                                        </tr>\r\n                                        <tr className='blue-bg'>\r\n                                            <th style={{ width: '25%' }} colSpan={2} className='col-right'>Fuera de USA</th>\r\n                                            {deductibles.map(x => <th className='text-right col-right' colSpan={2}>${x.out}</th>)}\r\n                                        </tr>\r\n                                        <tr style={{ backgroundColor: 'gray', color: 'black' }}>\r\n                                            <th>Min.</th>\r\n                                            <th className='col-right'>Max</th>\r\n                                            {deductibles.map(x =>\r\n                                                <Fragment>\r\n                                                    <th>Anual</th>\r\n                                                    <th className='col-right'>Semestral</th>\r\n                                                </Fragment>\r\n                                            )}\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            rates.length > 0 && ages.map((age, agekey) => (\r\n                                                <tr>\r\n                                                    <td>{age.min}</td>\r\n                                                    <td>{age.max}</td>\r\n                                                    {\r\n                                                        deductibles.map((ded, dedkey) => (\r\n                                                            <Fragment>\r\n                                                                <td>\r\n                                                                    <FormControl\r\n                                                                        value={getInputValue(ded, age, 'yearly_price')}\r\n                                                                        name={`${age.min}_${ded.in}_yearly`}\r\n                                                                        onChange={(e) => handlePriceChange(e)} />\r\n\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <FormControl value={getInputValue(ded, age, 'biyearly_price')} name={`${age.min}_${ded.in}_biyearly`} onChange={(e) => handlePriceChange(e)} />\r\n                                                                </td>\r\n                                                            </Fragment>\r\n                                                        ))\r\n                                                    }\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                                : null\r\n                        }\r\n\r\n                    </Tab>\r\n                    <Tab eventKey=\"endosos\" title=\"Endosos\"></Tab>\r\n                    <Tab eventKey=\"kidrates\" title=\"Tarifas (Niños)\"></Tab>\r\n                </Tabs>\r\n            </Col>\r\n\r\n        </Row >\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default PlansNew","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PlanShow from './PlanShow';\r\nimport PlansEdit from './PlansEdit';\r\nimport PlansNew from './PlansNew';\r\nimport CrudIndex from '../crud/Index';\r\nimport { getRegionList } from '../../ducks/regions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Plans = (props) => {\r\n    const headers = [\r\n        { name: 'ID', value: (e) => e.id, filter: false },\r\n        { name: 'Region', value: (e) => e.region, filter: 'region' },\r\n        { name: 'Nombre', value: (e) => e.name, filter: 'name' }\r\n    ]\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Switch>\r\n                <Route exact path='/plans' render={() => <CrudIndex headers={headers} for='plans' />}></Route>\r\n                <Route exact path='/plans/:id/edit' component={PlansEdit} ></Route>\r\n                <Route exact path='/plans/new' render={() => <PlansNew {...props} />}></Route>\r\n                <Route exact path='/plans/:id' component={PlanShow}></Route>\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    regions: state.regions,\r\n\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getRegionList: () => dispatch(getRegionList()),\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans);","import React from 'react';\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { API, APIHEADERS } from '../../utils';\r\n\r\n\r\nclass RegionShow extends React.Component {\r\n    state = {\r\n        region: null\r\n    }\r\n    componentDidMount() {\r\n        Axios.get(API + 'regions/' + this.props.match.params.id,{headers:APIHEADERS})\r\n            .then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    region: result.data\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        let region = this.state.region\r\n        return (\r\n            <Row>\r\n                <p>Show</p>\r\n                {region ?\r\n                    <React.Fragment>\r\n                        <Col sm={12}>\r\n                            <h3 className=\"text-center\">{region.name}</h3>\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <Card>\r\n                                <Card.Header>Datos de Region</Card.Header>\r\n                                <Card.Body>\r\n                                    <ListGroup>\r\n                                        <ListGroupItem>\r\n                                            <h5 className='text-primary'>Compañia</h5>\r\n                                            <p className=\"mb-0\">{region.company}</p>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <h5 className='text-primary'>Nombre</h5>\r\n                                            <p className=\"mb-0\">{region.name}</p>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <h5 className='text-primary'>Codigo</h5>\r\n                                            <p className=\"mb-0\">{region.codename}</p>\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <Card>\r\n                                <Card.Header>Paises En la Region</Card.Header>\r\n                                <Card.Body>\r\n                                    <ListGroup>\r\n                                        {\r\n                                            region.countries.map(country=>{\r\n                                                return(\r\n                                                    <ListGroupItem>\r\n                                                    <p className=\"mb-0\">{country.name}</p>\r\n                                                </ListGroupItem>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                       \r\n                                     \r\n                                    </ListGroup>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </React.Fragment>\r\n                    : null\r\n                }\r\n\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegionShow;","import React from 'react';\r\nimport { Row, Col, Card, ListGroup, ListGroupItem, FormControl, FormCheck, Button, Form } from 'react-bootstrap';\r\nimport { API, APIHEADERS } from '../../utils';\r\nimport Axios from 'axios';\r\n\r\nclass RegionsEdit extends React.Component {\r\n    state = {\r\n        region: null,\r\n        countries: []\r\n    }\r\n\r\n    getCountries() {\r\n\r\n        Axios.get(API + 'countries', { headers: APIHEADERS })\r\n            .then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    countries: result.data,\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(API + 'regions/' + this.props.match.params.id, { headers: APIHEADERS })\r\n            .then(res => res.data)\r\n            .then(result => {\r\n                this.setState({\r\n                    region: result.data\r\n                })\r\n            })\r\n        this.getCountries()\r\n    }\r\n\r\n    toggleCountry = (e) => {\r\n        let value = parseInt(e.target.value)\r\n        let region = this.state.region;\r\n        let element = region.countries.find(x => x.id === value)\r\n        if (e.target.checked) {\r\n            if (!element) {\r\n                region.countries.push({ ...this.state.countries.find(x => x.id === value), selected: true })\r\n            }\r\n            else {\r\n                element.selected = true;\r\n            }\r\n        }\r\n        else {\r\n            if (element) {\r\n                element.selected = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            region: region\r\n        })\r\n\r\n        console.log(element)\r\n\r\n\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log('a')\r\n        Axios.post(API+'regions/'+this.props.match.params.id,this.state.region,{headers:APIHEADERS}).then(res=>res.data)\r\n        .then(result=>{\r\n            console.log(result)\r\n        })\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n     \r\n    }\r\n    render() {\r\n        let region = this.state.region\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                    {\r\n                        region ?\r\n                            <React.Fragment>\r\n                                <Col sm={12}>\r\n                                    {JSON.stringify(this.state)}\r\n                                    <h3 className='text-center'>{region.name}</h3></Col>\r\n                                <Col sm={6}>\r\n                                    <Card>\r\n                                        <Card.Header className='d-flex justify-content-between'>\r\n                                            Datos de Region\r\n                                        <Button size='sm' type='submit'>Guardar</Button>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                    <h5 className='text-primary'>Compañia</h5>\r\n                                                    <FormControl as='select' size='sm' name='company_id' value={region.company_id}>\r\n                                                        <option value='1'>Allianz Care</option>\r\n                                                        <option value='2'>Vumi Group</option>\r\n                                                        <option value='3'>Best Doctors Insurance</option>\r\n                                                        <option value='5'>Bupa Salud</option>\r\n                                                        <option value='6'>BMI</option>\r\n                                                    </FormControl>\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                    <h5 className='text-primary'>Nombre</h5>\r\n                                                    <FormControl size='sm' name='name' value={region.name} />\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                    <h5 className='text-primary'>Codigo</h5>\r\n                                                    <FormControl size='sm' name='codename' value={region.codename} />\r\n                                                </ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col sm={6}>\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            Paises En la Region\r\n    \r\n                                    </Card.Header>\r\n                                        <Card.Body>\r\n                                            <Row>\r\n                                                {\r\n                                                    this.state.countries.map(country => {\r\n                                                        let isCountry = this.state.region.countries.find(x => x.id === country.id)\r\n\r\n                                                        return (\r\n                                                            <Col sm={4}>\r\n                                                                <FormCheck\r\n                                                                    label={country.name}\r\n                                                                    value={country.id}\r\n                                                                    checked={isCountry && (isCountry.selected === true || isCountry.selected === undefined)}\r\n                                                                    onChange={this.toggleCountry}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </React.Fragment>\r\n                            : null\r\n                    }\r\n\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegionsEdit;","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { API } from '../../utils';\r\nimport axios from 'axios';\r\nimport { Container } from 'react-bootstrap'\r\nimport { List } from '../../Components/List';\r\nimport RegionShow from './RegionShow';\r\nimport RegionsEdit from './RegionsEdit';\r\nimport CrudIndex from '../crud/Index';\r\n\r\n\r\nconst Regions = props =>{\r\n    const headers = [\r\n        {name: 'ID',value: (e) => e.id,filter:'id'},\r\n        {name:'Company',value:(e)=>e.company,filter:'company'},\r\n        {name:'Nombre',value:(e)=>e.name,filter:'name'},\r\n\r\n        \r\n    ]\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Switch>\r\n                <Route exact path='/regions' render={() => <CrudIndex headers={headers} for='regions' />}></Route>\r\n                <Route exact path='/regions/:id/edit' component={RegionsEdit}></Route>\r\n                <Route exact path='/regions/:id' component={RegionShow}></Route>\r\n                \r\n            </Switch>\r\n        </Container>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Regions","import React from 'react';\r\nimport { Row, Col, Form, FormControl, FormGroup, Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { APIHEADERS, API } from '../../utils';\r\n\r\nconst InitialState = {\r\n    file:null,\r\n    lang:'',\r\n    category:'',\r\n    company_id:'',\r\n    file_desc:'',\r\n    year:''\r\n}\r\nclass FileEdit extends React.Component {\r\n    \r\n    state={\r\n        lang:'',\r\n        category:'',\r\n        company_id:'',\r\n        file_desc:'',\r\n        year:''\r\n    }\r\n    handleChange=(e)=>{\r\n       this.setState({file:e.target.files[0]})\r\n    }\r\n\r\n    componentDidMount(){\r\n      \r\n            Axios.get(API + 'files/' + this.props.match.params.id, { headers: APIHEADERS }).then(res => res.data)\r\n                .then(result => {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        ...result.data\r\n                    })\r\n                })\r\n        \r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        let formData=new FormData();\r\n       \r\n        formData.set('file_desc',this.state.file_desc)\r\n        formData.set('category',this.state.category)\r\n        formData.set('lang',this.state.lang)\r\n        formData.set('company_id',this.state.company_id)\r\n        formData.set('year',this.state.year)\r\n        Axios.post(API+'files/' + this.props.match.params.id,formData,{ headers: {...APIHEADERS,'Content-Type': 'multipart/form-data'} }).then(res=>res.data)\r\n        .then(result=>{\r\n            if(!result.errors){\r\n                alert('Subido con exito');\r\n                this.setState(InitialState)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleInput=(e)=>{\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Row style={{ padding: 30 }}>\r\n                    <Col xs={12}>\r\n                        <h1 className='text-center'>Admin</h1>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"\">Categoria</label>\r\n                                <FormControl name='category' value={this.state.category} onChange={this.handleInput}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"\">Compañia</label>\r\n                                <FormControl as='select' name='company_id' value={this.state.company_id} onChange={this.handleInput}>\r\n                                    <option value='1'>Allianz</option>\r\n                                    <option value='2'>Vumi</option>\r\n                                    <option value='3'>Best Doctors</option>\r\n                                    <option value='4'>Megabrokers Latam</option>\r\n                                    <option value='5'>Bupa</option>\r\n                                    <option value='6'>BMI</option>\r\n                                    </FormControl>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Nombre de archivo</label>\r\n                                <FormControl name='file_desc' value={this.state.file_desc} onChange={this.handleInput}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Idioma</label>\r\n                                <FormControl as='select' name='lang' value={this.state.lang} onChange={this.handleInput}>\r\n                                    <option value='EN'>INGLES</option>\r\n                                    <option value='ES'>ESPAÑOL</option>\r\n                                    <option value='PT'>PORTUGUES</option>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Año</label>\r\n                                <FormControl as='select' name='year' value={this.state.year} onChange={this.handleInput}>\r\n                                    <option value='2018'>2018</option>\r\n                                    <option value='2019'>2019</option>\r\n                                    <option value='2020'>2020</option>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                            <Button type='submit'>Guardar</Button>\r\n                        </Form>\r\n                        \r\n                    </Col>\r\n                  \r\n                    \r\n                </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileEdit;","import React from 'react';\r\n\r\nimport { Row, Col, Form, FormControl, FormGroup, Button } from 'react-bootstrap';\r\n\r\nimport Axios from 'axios';\r\nimport { APIHEADERS, API } from '../../utils';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst FileNew = ({history}) => {\r\n    const [file, setFile] = useState(null);\r\n    const [lang, setLang] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [company_id, setCompanyId] = useState('');\r\n    const [file_desc, setFileDesc] = useState('');\r\n    const [year, setYear] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.set('file_desc', file_desc);\r\n        formData.set('category', category);\r\n        formData.set('company_id', company_id);\r\n        formData.set('year', year);\r\n        formData.set('lang',lang)\r\n        Axios.post(API + 'files', formData, { headers: { ...APIHEADERS, 'Content-Type': 'multipart/form-data' } }).then(res => res.data)\r\n            .then(result => {\r\n                if (!result.errors) {\r\n                    alert('Subido Con exito')\r\n                 history.push('/files');\r\n                }\r\n            })\r\n    }\r\n\r\n    const uploadFile = (e) => {\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Row style={{ padding: 30 }}>\r\n            <Col xs={12}>\r\n                <h1 className='text-center'>Nuevo Documento</h1>\r\n            </Col>\r\n            <Col xs={6}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"\">Categoria</label>\r\n                        <FormControl name='category' value={category} onChange={({target})=>setCategory(target.value)} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"\">Compañia</label>\r\n                        <FormControl as='select' name='company_id' value={company_id} onChange={({target})=>setCompanyId(target.value)}>\r\n                            <option value=\"\">Seleccione...</option>\r\n                            <option value='1'>Allianz</option>\r\n                            <option value='2'>Vumi</option>\r\n                            <option value='3'>Best Doctors</option>\r\n                            <option value='4'>Megabrokers Latam</option>\r\n                            <option value='5'>Bupa</option>\r\n                            <option value='6'>BMI</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label>Nombre de archivo</label>\r\n                        <FormControl name='file_desc' value={file_desc} onChange={({target})=>setFileDesc(target.value)} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label>Idioma</label>\r\n                        <FormControl as='select' name='lang' value={lang} onChange={({target})=>setLang(target.value)}>\r\n                            <option value=\"\">Seleccione...</option>\r\n                            <option value='EN'>INGLES</option>\r\n                            <option value='ES'>ESPAÑOL</option>\r\n                            <option value='PT'>PORTUGUES</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label>Año</label>\r\n                        <FormControl as='select' name='year' value={year} onChange={({target})=>setYear(target.value)}>\r\n                            <option value=\"\">Seleccione...</option>\r\n                            <option value='2018'>2018</option>\r\n                            <option value='2019'>2019</option>\r\n                            <option value='2020'>2020</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <Button type='submit'>Guardar</Button>\r\n                </Form>\r\n\r\n            </Col>\r\n            <Col xs={6}>\r\n                <FormGroup>\r\n                    <label htmlFor=\"\">Archivo</label>\r\n                    <FormControl name='file' type='file' onChange={({target})=>setFile(target.files[0])} />\r\n                </FormGroup>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default FileNew;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport CrudIndex from '../crud/Index';\r\nimport FileEdit from './Edit';\r\nimport FileNew from './New';\r\n\r\nclass Files extends React.Component{\r\n    headers=[\r\n        {name:'ID',value:(e)=>e.id,filter:false},\r\n        {name:'Año',value:(e)=>e.year,filter:'year'},\r\n        {name:'Idioma',value:(e)=>e.lang,filter:'lang'},\r\n        {name:\"Compañia\",value:(e)=>e.company,filter:'company'},\r\n        {name:\"Nombre\",value:(e)=>e.file_desc,filter:false}\r\n        \r\n    ]\r\n    /*\r\n    headers={\r\n        id:'ID',\r\n        company:'COMPAÑIA',\r\n        file_desc:'NOMBRE',\r\n        year:'AÑO',\r\n        lang:'IDIOMA'\r\n    }\r\n    */\r\n    render(){\r\n       return(\r\n        <Container fluid>\r\n        <Switch>\r\n            <Route exact path='/files' render={() => <CrudIndex headers={this.headers} for='files'/>}></Route>\r\n            <Route path='/files/:id/edit' component={FileEdit}/>\r\n            <Route path='/files/new' render={(props)=><FileNew {...props}/>}/>\r\n        </Switch>\r\n    </Container>\r\n       )\r\n\r\n    }\r\n}\r\n\r\nexport default Files;","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport Users from './Views/Users/Users';\r\nimport Plans from './Views/Plans/Plans';\r\nimport './application.scss'\r\nimport Regions from './Views/Regions/Regions';\r\n\r\nimport Files from './Views/Files/Files';\r\nconst styles = {\r\n  sidebar: {\r\n    flex: 1,\r\n\r\n   \r\n\r\n\r\n  },\r\n  page: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'stretch',\r\n    maxHeight: '100vh',\r\n    minHeight: '100vh',\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    flex: 5,\r\n    overflowY: 'scroll'\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BasicLayout>\r\n        <Switch>\r\n          <Route path='/users' component={()=><Users/>} />\r\n          <Route path='/regions' component={() => <Regions />} />\r\n          <Route path='/files' component={() => <Files />} />\r\n          <Route path='/plans' component={() => <Plans />} />\r\n        </Switch>\r\n      </BasicLayout>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst Sidebar = (props) => (\r\n  <div style={styles.sidebar} className='sidebar'>\r\n    <ul>\r\n      <li><Link to='/users'>Usuarios</Link></li>\r\n      <li><Link to='/files'>Documentos</Link></li>\r\n      <li><Link to='/regions'>Regiones</Link></li>\r\n      <li><Link to='/plans'>Planes</Link></li>\r\n      <li><Link to='/companies'>Compañias</Link></li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst BasicLayout = (props) => (\r\n  <div style={styles.page}>\r\n    <Sidebar />\r\n    <div style={styles.content}>\r\n      {props.children}\r\n    </div>\r\n  </div>\r\n\r\n)\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport userReducer from './ducks/user';\r\nimport RegionReducer from './ducks/regions';\r\nimport CountryReducer from './ducks/countries';\r\nconst middleware = [thunk];\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n    regions:RegionReducer,\r\n    countries:CountryReducer,\r\n\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}